{"version":3,"file":"js/892.9541669c.js","mappings":"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","sources":["webpack://3d-renderer/./src/store/modules/forms.ts","webpack://3d-renderer/./node_modules/vue-loader/dist/index.js","webpack://3d-renderer/./src/components/common/app-form/app-form.vue"],"sourcesContent":["import type { FieldErrorState, FieldValue, FormsState } from \"@/types/forms\";\r\nimport { defineStore } from \"pinia\";\r\n\r\nconst useFormsStore = defineStore(\"forms\", {\r\n  state: () =>\r\n    ({\r\n      forms: {},\r\n    } as FormsState),\r\n  getters: {\r\n    getFormFields:\r\n      (state: FormsState) =>\r\n      (formId: string): Record<string, FieldValue> | undefined =>\r\n        state.forms[formId]?.fields,\r\n    getFormRawValues:\r\n      (state: FormsState) =>\r\n      (formId: string): Record<string, unknown> | undefined => {\r\n        if (!state.forms[formId]) {\r\n          return undefined;\r\n        }\r\n        const result: Record<string, unknown> = {};\r\n        for (const fieldName in state.forms[formId].fields) {\r\n          result[fieldName] = state.forms[formId].fields[fieldName].value;\r\n        }\r\n        return result;\r\n      },\r\n    getErrorsStatus:\r\n      (state: FormsState) =>\r\n      (formId: string): FieldErrorState[] | undefined => {\r\n        const errorState: FieldErrorState[] = [];\r\n        if (!state.forms[formId]) {\r\n          return undefined;\r\n        }\r\n        for (const fieldName in state.forms[formId].fields) {\r\n          const currentField = state.forms[formId].fields[fieldName];\r\n          if (currentField.error == true) {\r\n            errorState.push({\r\n              fieldName,\r\n              fieldCurrentValue: currentField.value,\r\n              fieldOriginalValue: currentField.originalValue,\r\n              errorDescription: currentField.errorDescription ?? \"UNKNOWN\",\r\n            });\r\n          }\r\n        }\r\n        return errorState;\r\n      },\r\n    getField:\r\n      (state: FormsState) =>\r\n      (formId: string, fieldName: string): FieldValue | undefined =>\r\n        state.forms[formId]?.fields[fieldName],\r\n    getFieldValue:\r\n      (state: FormsState) =>\r\n      (formId: string, fieldName: string): unknown | undefined =>\r\n        state.forms[formId]?.fields[fieldName]?.value,\r\n    getFieldErrorStatus:\r\n      (state: FormsState) =>\r\n      (formId: string, fieldName: string): boolean | undefined =>\r\n        state.forms[formId]?.fields[fieldName]?.error,\r\n    getFieldErrorMessage:\r\n      (state: FormsState) =>\r\n      (formId: string, fieldName: string): string | undefined =>\r\n        state.forms[formId]?.fields[fieldName]?.errorDescription,\r\n  },\r\n  actions: {\r\n    setFieldValue(\r\n      formId: string,\r\n      fieldName: string,\r\n      value?: unknown,\r\n      required?: boolean,\r\n      error?: boolean,\r\n      errorMessage?: string\r\n    ) {\r\n      if (!this.forms[formId]) {\r\n        this.forms[formId] = { fields: {} };\r\n      }\r\n      if (!this.forms[formId].fields[fieldName]) {\r\n        this.forms[formId].fields[fieldName] = {\r\n          originalValue: value,\r\n        };\r\n      }\r\n      const field = this.forms[formId].fields[fieldName];\r\n      if (typeof error != \"undefined\") {\r\n        field.error = error;\r\n        field.errorDescription = errorMessage;\r\n      }\r\n      field.value = value;\r\n      field.required = required;\r\n    },\r\n    setFieldError(\r\n      formId: string,\r\n      fieldName: string,\r\n      error: boolean,\r\n      errorMsg?: string\r\n    ) {\r\n      const field = this.forms[formId].fields[fieldName];\r\n      if (!field) {\r\n        return;\r\n      }\r\n      field.error = error;\r\n      field.errorDescription = errorMsg;\r\n    },\r\n    validateForm(formId: string) {\r\n      const form = this.forms[formId].fields ?? {};\r\n      for (const fieldName in form) {\r\n        const field = form[fieldName];\r\n        if (field.required && !field.value) {\r\n          field.error = true;\r\n          field.errorDescription = \"fieldRequired\";\r\n        }\r\n      }\r\n    },\r\n    resetFormErrors(formId: string) {\r\n      const form = this.forms[formId].fields ?? {};\r\n      for (const fieldName in form) {\r\n        form[fieldName].error = undefined;\r\n        form[fieldName].errorDescription = undefined;\r\n      }\r\n    },\r\n    resetFormValues(formId: string) {\r\n      const form = this.forms[formId].fields ?? {};\r\n      for (const fieldName in form) {\r\n        form[fieldName].value = form[fieldName].originalValue;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport default useFormsStore;\r\n","import { defineComponent as _defineComponent } from 'vue'\nimport { renderSlot as _renderSlot, createElementVNode as _createElementVNode, unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = { key: 0 }\n\nimport useFormsStore from \"@/store/modules/forms\";\r\nimport type { FieldErrorState } from \"@/types/forms\";\r\nimport { computed } from \"vue\";\r\nimport { useI18n } from \"vue-i18n\";\r\n\r\ninterface AppFormProps {\r\n  formId: string;\r\n  btnText?: string;\r\n  btnClass?: string | string[] | Record<string, boolean>;\r\n  btnContainerClass?: string | string[] | Record<string, boolean>;\r\n  btnIcon?: string;\r\n  btnIconSize?: string;\r\n  displayErrors?: boolean;\r\n}\r\n\r\ninterface AppFormEvents {\r\n  (e: \"submit\", hasError: boolean, errors?: FieldErrorState[]): void;\r\n  (e: \"update:displayErrors\", displayErrors: boolean): void;\r\n}\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  name: 'app-form',\n  props: {\n    formId: null,\n    btnText: { default: \"confirm\" },\n    btnClass: null,\n    btnContainerClass: null,\n    btnIcon: null,\n    btnIconSize: null,\n    displayErrors: { type: Boolean, default: true }\n  },\n  emits: [\"submit\", \"update:displayErrors\"],\n  setup(__props: any, { emit }: { emit: ({\r\n  (e: \"submit\", hasError: boolean, errors?: FieldErrorState[]): void;\r\n  (e: \"update:displayErrors\", displayErrors: boolean): void;\r\n}), expose: any, slots: any, attrs: any }) {\n\nconst props = __props as { formId: string, btnText: string, btnClass?: string | string[] | Record<string, boolean>, btnContainerClass?: string | string[] | Record<string, boolean>, btnIcon?: string, btnIconSize?: string, displayErrors: boolean }\n\r\n\r\n\r\n\r\nconst formsStore = useFormsStore();\r\nconst { t } = useI18n();\r\n\r\nconst formErrors = computed(() => formsStore.getErrorsStatus(props.formId));\r\n\r\nconst validateForm = () => {\r\n  formsStore.validateForm(props.formId);\r\n  if (formErrors.value && formErrors.value.length > 0) {\r\n    emit(\"submit\", true, formErrors.value);\r\n  } else {\r\n    emit(\"submit\", false);\r\n  }\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_app_button = _resolveComponent(\"app-button\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"div\", null, [\n      _renderSlot(_ctx.$slots, \"default\")\n    ]),\n    _createElementVNode(\"div\", null, [\n      (__props.displayErrors && _unref(formErrors))\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(formErrors), (error, i) => {\n              return (_openBlock(), _createElementBlock(\"p\", {\n                key: i,\n                class: \"text-error\"\n              }, _toDisplayString(_unref(t)(error.fieldName)) + \" - \" + _toDisplayString(error.errorDescription), 1))\n            }), 128))\n          ]))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"div\", {\n        class: _normalizeClass([\"responsive-flex justify-end gap-4 my-4 mx-2\", __props.btnContainerClass])\n      }, [\n        _createVNode(_component_app_button, {\n          icon: __props.btnIcon,\n          iconSize: __props.btnIconSize,\n          classes: __props.btnClass,\n          onClick: validateForm\n        }, {\n          default: _withCtx(() => [\n            _createTextVNode(_toDisplayString(__props.btnText), 1)\n          ]),\n          _: 1\n        }, 8, [\"icon\", \"iconSize\", \"classes\"]),\n        _renderSlot(_ctx.$slots, \"btnZone\")\n      ], 2)\n    ])\n  ]))\n}\n}\n\n})","import script from \"./app-form.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./app-form.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["useFormsStore","defineStore","state","forms","getters","getFormFields","formId","fields","getFormRawValues","result","fieldName","value","getErrorsStatus","errorState","currentField","error","push","fieldCurrentValue","fieldOriginalValue","originalValue","errorDescription","getField","getFieldValue","getFieldErrorStatus","getFieldErrorMessage","actions","setFieldValue","required","errorMessage","this","field","setFieldError","errorMsg","validateForm","form","resetFormErrors","undefined","resetFormValues","_hoisted_1","key","_defineComponent","name","props","btnText","default","btnClass","btnContainerClass","btnIcon","btnIconSize","displayErrors","type","Boolean","emits","setup","__props","emit","formsStore","t","useI18n","formErrors","computed","length","_ctx","_cache","_component_app_button","_resolveComponent","_openBlock","_createElementBlock","_createElementVNode","_renderSlot","$slots","_unref","_Fragment","_renderList","i","class","_toDisplayString","_createCommentVNode","_normalizeClass","_createVNode","icon","iconSize","classes","onClick","_withCtx","_createTextVNode","_","__exports__"],"sourceRoot":""}